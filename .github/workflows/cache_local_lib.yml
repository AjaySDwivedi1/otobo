%YAML 1.1
---
name: 'CacheLocalLib'
on:
  push:
    branches:
    - rel-10_1
jobs:
    CacheLocalLib:
        runs-on: 'ubuntu-latest'
        env:
            PERL5LIB: local/lib/perl5
        steps:

            - name: 'checkout otobo'
              uses: actions/checkout@v2

            # Use caching for not needing to reinstall modules from CPAN for every check.
            # Packages are reinstalled when cpanfile.docker changes or when
            # cache key is manually changed.
            # Set current date for forcing a rebuild. In this case, make sure that
            # code_policy.yml, syntax_check.yml, and cache_local_lib.yml are kept in sync.
            # The rules where the cache is visible are not obvious. Essentially the cache must be created on an ancestor branch.
            # For that there is cache_local_lib.yml.
            # See https://docs.github.com/en/actions/advanced-guides/caching-dependencies-to-speed-up-workflows#restrictions-for-accessing-a-cache
            - name: 'check cache for CPAN modules'
              uses: actions/cache@v2
              id: local_lib
              with:
                path: local
                key: ${{ runner.os }}-${{ hashFiles('cpanfile.docker') }}-local_lib-20210923j

            - name: 'install dependencies'
              if: steps.local_lib.outputs.cache-hit != 'true'
              run: sudo apt install -y libcode-tidyall-perl libxml2-utils libxml-libxslt-perl cpanminus

            - name: 'install from cpanfile.docker'
              if: steps.local_lib.outputs.cache-hit != 'true'
              run: |
                cpanm -l local --quiet --notest --installdeps --cpanfile cpanfile.docker . || sh -xc 'cat ~/.cpanm/work/*/build.log'
