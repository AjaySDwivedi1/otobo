# Docker compose file for the OTOBO webapp.
# Note that only HTTP is supported in docker-compose.yml
# The default port is 80. This setting can be overriden with OTOBO_WEB_PORT=81 in the .env file.
# For HTTPS see docker-compose_https.yml.
# See also README_DOCKER.md.

# most current docker-compose file version, as of 2020-05-21
version: '3.3'

services:

  # the database
  db:
    image: mariadb:10.5.3-bionic
    restart: always
    volumes:
      - mariadb_data:/var/lib/mysql

    # do not expose the mysql default port to the docker host host
    # use 'docker exec -it otobo_db_1 mysql ...' when access is needed
    # because the the otobo DB user is allowed for the complete Docker network
    # ports:
      #- "5001:3306"

    # Set the db root password which has to be entered when running otobo/installer.pl.
    # The passwort is secrect and can be stored in the file .env.
    # The content of the .env file is something like:
    # MYSQL_ROOT_PASSWORD=otobo_root_db_passwd
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-otobo_root}

    command: --max_allowed_packet=68157440 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --innodb-log-file-size=268435456

  web:
    # use ./Dockerfile for building, image otobo_web
    build:
      context: .
      dockerfile: scripts/docker/web.Dockerfile
    # give a name to the built image so that the service 'cron' can reuse it
    image: otobo_web:latest
    depends_on:
      - db
      - elastic
      - redis
    restart: always
    # expose the HTTP port to the host
    ports:
      - "${OTOBO_WEB_PORT:-80}:5000"
    volumes:
      - opt_otobo:/opt/otobo
    command: web

  cron:
    image: otobo_web:latest
    depends_on:
      - web
    volumes:
      - opt_otobo:/opt/otobo
    command: cron

  # a container running ElasticSearch
  elastic:
    image: elasticsearch:7.8.0
    restart: always
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  # a container running Redis
  redis:
    image: redis:6.0.5-alpine
    restart: always
    volumes:
      - redis_data:/data


# no volumnes need to be exposed across services
volumes:
  mariadb_data: {}
  opt_otobo: {}
  elasticsearch_data: {}
  redis_data: {}
