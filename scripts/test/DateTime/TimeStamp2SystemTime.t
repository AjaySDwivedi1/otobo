# --
# OTOBO is a web-based ticketing system for service organisations.
# --
# Copyright (C) 2001-2020 OTRS AG, https://otrs.com/
# Copyright (C) 2019-2020 Rother OSS GmbH, https://otobo.de/
# --
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
# --

use strict;
use warnings;
use utf8;

# core modules

# CPAN modules

# OTOBO modules

# Set up the test driver $Self when we are running as a standalone script.
use if __PACKAGE__ ne 'Kernel::System::UnitTest::Driver', 'Kernel::System::UnitTest::RegisterDriver';

use vars (qw($Self));

# with specific time zone
my $DateTimeObject = $Kernel::OM->Create(
    'Kernel::System::DateTime',
    ObjectParams => {
        TimeZone => 'Europe/Belgrade',
    }
);

$Self->Is(
    ref $DateTimeObject,
    'Kernel::System::DateTime',
    'Creation of DateTime object must succeed.'
);

#
# TimeStamp2SystemTime tests
#
my @TimeStamp2SystemTimeTests = (
    {
        # TODO: incorrect expected result: Z indicates Zulu time, that is UTC
        #       See the command: date -d"2005-10-20T10:00:00Z" +%s
        String         => '2005-10-20T10:00:00Z',
        ExpectedResult => 1129795200,
    },
    {
        String         => '2005-10-20T10:00:00+00:00',
        ExpectedResult => 1129795200,
    },
    {
        String         => '20-10-2005 10:00:00',
        ExpectedResult => 1129795200,
    },
    {
        String         => '2005-10-20 10:00:00',
        ExpectedResult => 1129795200,
    },
);

# TODO: test failing because timezone UTC is assumed
for my $Test (@TimeStamp2SystemTimeTests) {
    my $SystemTime = $DateTimeObject->TimeStamp2SystemTime( String => $Test->{String} );

    $Self->Is(
        $SystemTime,
        $Test->{ExpectedResult},
        'System time generated by TimeStamp2SystemTime() must match expected one.',
    );
}

$Self->DoneTesting();

1;
